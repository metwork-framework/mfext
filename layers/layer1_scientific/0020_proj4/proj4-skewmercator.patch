diff -uprN proj-4.8.0/src/Makefile.am proj-4.8.0.patch/src/Makefile.am
--- proj-4.8.0/src/Makefile.am	2012-03-07 06:58:49.000000000 +0100
+++ proj-4.8.0.patch/src/Makefile.am	2016-01-30 19:12:06.980004898 +0100
@@ -33,7 +33,7 @@ libproj_la_SOURCES = \
 	PJ_rpoly.c PJ_sconics.c proj_rouss.c \
 	PJ_cass.c PJ_cc.c PJ_cea.c PJ_eqc.c \
 	PJ_gall.c PJ_labrd.c PJ_lsat.c PJ_merc.c \
-	PJ_mill.c PJ_ocea.c PJ_omerc.c PJ_somerc.c \
+	PJ_mill.c PJ_ocea.c PJ_omerc.c PJ_somerc.c PJ_skmerc.c \
 	PJ_tcc.c PJ_tcea.c PJ_tmerc.c \
 	PJ_airy.c PJ_aitoff.c PJ_august.c PJ_bacon.c \
 	PJ_chamb.c PJ_hammer.c PJ_lagrng.c PJ_larr.c \
diff -uprN proj-4.8.0/src/Makefile.in proj-4.8.0.patch/src/Makefile.in
--- proj-4.8.0/src/Makefile.in	2012-03-07 06:59:01.000000000 +0100
+++ proj-4.8.0.patch/src/Makefile.in	2016-01-30 19:12:06.980004898 +0100
@@ -81,7 +81,7 @@ am_libproj_la_OBJECTS = PJ_aeqd.lo PJ_gn
 	PJ_isea.lo PJ_imw_p.lo PJ_krovak.lo PJ_lcc.lo PJ_poly.lo \
 	PJ_rpoly.lo PJ_sconics.lo proj_rouss.lo PJ_cass.lo PJ_cc.lo \
 	PJ_cea.lo PJ_eqc.lo PJ_gall.lo PJ_labrd.lo PJ_lsat.lo \
-	PJ_merc.lo PJ_mill.lo PJ_ocea.lo PJ_omerc.lo PJ_somerc.lo \
+	PJ_merc.lo PJ_mill.lo PJ_ocea.lo PJ_omerc.lo PJ_somerc.lo PJ_skmerc.lo \
 	PJ_tcc.lo PJ_tcea.lo PJ_tmerc.lo PJ_airy.lo PJ_aitoff.lo \
 	PJ_august.lo PJ_bacon.lo PJ_chamb.lo PJ_hammer.lo PJ_lagrng.lo \
 	PJ_larr.lo PJ_lask.lo PJ_nocol.lo PJ_ob_tran.lo PJ_oea.lo \
@@ -292,7 +292,7 @@ libproj_la_SOURCES = \
 	PJ_rpoly.c PJ_sconics.c proj_rouss.c \
 	PJ_cass.c PJ_cc.c PJ_cea.c PJ_eqc.c \
 	PJ_gall.c PJ_labrd.c PJ_lsat.c PJ_merc.c \
-	PJ_mill.c PJ_ocea.c PJ_omerc.c PJ_somerc.c \
+	PJ_mill.c PJ_ocea.c PJ_omerc.c PJ_somerc.c PJ_skmerc.c \
 	PJ_tcc.c PJ_tcea.c PJ_tmerc.c \
 	PJ_airy.c PJ_aitoff.c PJ_august.c PJ_bacon.c \
 	PJ_chamb.c PJ_hammer.c PJ_lagrng.c PJ_larr.c \
@@ -549,6 +549,7 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_rpoly.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_sconics.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_somerc.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_skmerc.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_stere.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_sterea.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PJ_sts.Plo@am__quote@
diff -uprN proj-4.8.0/src/makefile.vc proj-4.8.0.patch/src/makefile.vc
--- proj-4.8.0/src/makefile.vc	2012-03-07 06:58:49.000000000 +0100
+++ proj-4.8.0.patch/src/makefile.vc	2016-01-30 19:12:06.980004898 +0100
@@ -17,7 +17,7 @@ conic = \
 cylinder = \
 	PJ_cass.obj PJ_cc.obj PJ_cea.obj PJ_eqc.obj \
 	PJ_gall.obj PJ_labrd.obj PJ_lsat.obj PJ_merc.obj \
-	PJ_mill.obj PJ_ocea.obj PJ_omerc.obj PJ_somerc.obj \
+	PJ_mill.obj PJ_ocea.obj PJ_omerc.obj PJ_somerc.obj PJ_skmerc.obj \
 	PJ_tcc.obj PJ_tcea.obj PJ_tmerc.obj PJ_geos.obj \
 	PJ_gstmerc.obj proj_etmerc.obj 
 
diff -uprN proj-4.8.0/src/pj_list.h proj-4.8.0.patch/src/pj_list.h
--- proj-4.8.0/src/pj_list.h	2012-03-07 06:58:49.000000000 +0100
+++ proj-4.8.0.patch/src/pj_list.h	2016-01-30 19:12:06.980004898 +0100
@@ -110,6 +110,7 @@ PROJ_HEAD(robin, "Robinson")
 PROJ_HEAD(rouss, "Roussilhe Stereographic")
 PROJ_HEAD(rpoly, "Rectangular Polyconic")
 PROJ_HEAD(sinu, "Sinusoidal (Sanson-Flamsteed)")
+PROJ_HEAD(skmerc, "Skew Mercator")
 PROJ_HEAD(somerc, "Swiss. Obl. Mercator")
 PROJ_HEAD(stere, "Stereographic")
 PROJ_HEAD(sterea, "Oblique Stereographic Alternative")
diff -uprN proj-4.8.0/src/PJ_skmerc.c proj-4.8.0.patch/src/PJ_skmerc.c
--- proj-4.8.0/src/PJ_skmerc.c	1970-01-01 01:00:00.000000000 +0100
+++ proj-4.8.0.patch/src/PJ_skmerc.c	2016-01-30 19:12:06.980004898 +0100
@@ -0,0 +1,67 @@
+#define PROJ_PARMS__ \
+	double	sinrot, cosrot;
+#define PJ_LIB__
+#include	<projects.h>
+PROJ_HEAD(skmerc, "Skew Mercator") "\n\tCyl, Sph&Ell\n\tlat_ts= gamma=";
+#define EPS10 1.e-10
+FORWARD(e_forward); /* ellipsoid */
+	double u, v;
+	if (fabs(fabs(lp.phi) - HALFPI) <= EPS10) F_ERROR;
+	u = P->k0 * lp.lam;
+	v = - P->k0 * log(pj_tsfn(lp.phi, sin(lp.phi), P->e));
+	xy.x = u * P->cosrot - v * P->sinrot;
+	xy.y = v * P->cosrot + u * P->sinrot;
+	return (xy);
+}
+FORWARD(s_forward); /* spheroid */
+	double u, v;
+	if (fabs(fabs(lp.phi) - HALFPI) <= EPS10) F_ERROR;
+	u = P->k0 * lp.lam;
+	v = P->k0 * log(tan(FORTPI + .5 * lp.phi));
+	xy.x = u * P->cosrot - v * P->sinrot;
+	xy.y = v * P->cosrot + u * P->sinrot;
+	return (xy);
+}
+INVERSE(e_inverse); /* ellipsoid */
+	double u, v;
+	u = xy.x * P->cosrot + xy.y * P->sinrot;
+	v = xy.y * P->cosrot - xy.x * P->sinrot;
+	if ((lp.phi = pj_phi2(P->ctx, exp(- v / P->k0), P->e)) == HUGE_VAL) I_ERROR;
+	lp.lam = u / P->k0;
+	return (lp);
+}
+INVERSE(s_inverse); /* spheroid */
+	double u, v;
+	u = xy.x * P->cosrot + xy.y * P->sinrot;
+	v = xy.y * P->cosrot - xy.x * P->sinrot;
+	lp.phi = HALFPI - 2. * atan(exp(-v / P->k0));
+	lp.lam = u / P->k0;
+	return (lp);
+}
+FREEUP; if (P) pj_dalloc(P); }
+ENTRY0(skmerc)
+	double phits=0.0, gamma=0.0;
+	int is_phits, gam;
+
+	if( (is_phits = pj_param(P->ctx, P->params, "tlat_ts").i) ) {
+		phits = fabs(pj_param(P->ctx, P->params, "rlat_ts").f);
+		if (phits >= HALFPI) E_ERROR(-24);
+	}
+	if ((gam = pj_param(P->ctx, P->params, "tgamma").i) != 0)
+		gamma = pj_param(P->ctx, P->params, "rgamma").f;
+
+	P->sinrot = sin(gamma);
+	P->cosrot = cos(gamma);
+
+	if (P->es) { /* ellipsoid */
+		if (is_phits)
+			P->k0 = pj_msfn(sin(phits), cos(phits), P->es);
+		P->inv = e_inverse;
+		P->fwd = e_forward;
+	} else { /* sphere */
+		if (is_phits)
+			P->k0 = cos(phits);
+		P->inv = s_inverse;
+		P->fwd = s_forward;
+	}
+ENDENTRY(P)
