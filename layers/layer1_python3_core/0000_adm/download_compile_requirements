#!/bin/bash

. "${MFEXT_HOME}/lib/bash_utils.sh"

set -eu

function usage() {
    echo "usage: download_compile_requirements /path/to/requirements.txt"
}

if test "${1:-}" = "--help"; then
    usage
    exit 0
fi
if test "${1:-}" = ""; then
    usage
    exit 1
fi
REQUIREMENTS="$1"
REALPATH=$(readlink -m "${REQUIREMENTS}")
REALDIRNAME=$(dirname "${REALPATH}")
if test -f "${REALDIRNAME}/allow_binary_packages"; then
    INSTALL_REQUIREMENTS_ALLOW_BINARIES=1
else
    INSTALL_REQUIREMENTS_ALLOW_BINARIES=0
fi

TEMPO_LAYER_LABEL="tempolayer$$"
TEMPO_LAYER_PATH="$(pwd)/${TEMPO_LAYER_LABEL}"

CONSTRAINT=""
IFS=":" read -ra PATHS <<< "${PYTHONPATH:-}"
if test "${PATHS:-}" != ""; then
    for P in "${PATHS[@]}"; do
        F="${P}/requirements${METWORK_PYTHON_MODE:-}.txt"
        if test -f "${F}"; then
            CONSTRAINT="${CONSTRAINT} -c ${F}"
        fi
    done
fi

bootstrap_layer.sh "${TEMPO_LAYER_LABEL}" "${TEMPO_LAYER_PATH}"
layer_load "${TEMPO_LAYER_PATH}" >&2

mkdir -p "${TEMPO_LAYER_PATH}/tmp"
export TMPDIR="${TEMPO_LAYER_PATH}/tmp"
mkdir -p src
mkdir -p tmp_src

N=$(cat "${REQUIREMENTS}" |grep -c "^[^#].*[a-zA-Z0-9].*" || true)
if test "${N}" -eq 0; then
    rm -Rf "${TEMPO_LAYER_PATH}"
    rm -Rf tmp_src
    exit 0
fi

if test "${INSTALL_REQUIREMENTS_ALLOW_BINARIES}" = "1"; then
    BINARY=""
else
    BINARY="--no-binary :all:"
fi

# shellcheck disable=SC2086
pip wheel --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org --trusted-host downloads.sourceforge.net --disable-pip-version-check --wheel-dir=./src --src=./tmp_src ${BINARY} -r "${REQUIREMENTS}" ${CONSTRAINT} >&2
rm -Rf tmp_src

rm -Rf "${TEMPO_LAYER_PATH}"
