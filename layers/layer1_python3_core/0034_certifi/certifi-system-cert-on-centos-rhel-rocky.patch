diff -up certifi-2024.7.4/certifi/core.py.orig certifi-2024.7.4/certifi/core.py
--- certifi-2024.7.4/certifi/core.py.orig	2024-07-09 13:43:16.563268947 +0000
+++ certifi-2024.7.4/certifi/core.py	2024-07-09 13:46:41.553418185 +0000
@@ -5,8 +5,19 @@ certifi.py
 This module returns the installation location of cacert.pem or its contents.
 """
 import sys
+import distro
 import atexit
 
+def is_centos_rhel_rocky():
+    try:
+        distribution_name = distro.id()
+    except Exception:
+        return False
+    return ( ('centos' in distribution_name) or
+             ('redhat' in distribution_name) or
+             ('rocky' in distribution_name) )
+
+
 def exit_cacert_ctx() -> None:
     _CACERT_CTX.__exit__(None, None, None)  # type: ignore[union-attr]
 
@@ -19,6 +30,9 @@ if sys.version_info >= (3, 11):
     _CACERT_PATH = None
 
     def where() -> str:
+        if is_centos_rhel_rocky():
+            return "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
+
         # This is slightly terrible, but we want to delay extracting the file
         # in cases where we're inside of a zipimport situation until someone
         # actually calls where(), but we don't want to re-extract the file
@@ -54,6 +68,9 @@ elif sys.version_info >= (3, 7):
     _CACERT_PATH = None
 
     def where() -> str:
+        if is_centos_rhel_rocky():
+            return "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
+
         # This is slightly terrible, but we want to delay extracting the
         # file in cases where we're inside of a zipimport situation until
         # someone actually calls where(), but we don't want to re-extract
@@ -106,6 +123,9 @@ else:
     # If we don't have importlib.resources, then we will just do the old logic
     # of assuming we're on the filesystem and munge the path directly.
     def where() -> str:
+        if is_centos_rhel_rocky():
+            return "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
+
         f = os.path.dirname(__file__)
 
         return os.path.join(f, "cacert.pem")
