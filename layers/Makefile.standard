OPTIONS=
MAKEOPT=
EXTRACFLAGS=
EXTRALDFLAGS=
EXTRA_SETUP_PY_FLAGS=
EXPLICIT_NAME=no
ifeq ($(ARCHIVE),)
    ifeq ($(EXTENSION),)
        ARCHIVE:=$(NAME)-$(VERSION)
    else ifeq ($(EXTENSION),noext)
        ARCHIVE:=$(NAME)-$(VERSION)
    else
        ARCHIVE:=$(NAME)-$(VERSION).$(EXTENSION)
    endif
endif
ARCHIVE_TARGET=./build/$(ARCHIVE)

ifeq ($(EXPLICIT_NAME),no)
	NAME_VERSION:=$(NAME)-$(VERSION)
else
	NAME_VERSION:=$(EXPLICIT_NAME)
endif
PFIX_STRING:=--prefix=$(PREFIX)

.PHONY: autoconf autoreconf configure cmake build install download uncompress python2build python2install python3build python3install

autoconf:
	cd build/$(NAME_VERSION) && autoconf

autoreconf:
	cd build/$(NAME_VERSION) && autoreconf --force --install

configure:
	cd build/$(NAME_VERSION) && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS="$(EXTRALDFLAGS)"; fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS="$(EXTRACFLAGS)";export CPPFLAGS="$(EXTRACFLAGS)"; fi && if test "$(EXTRAENV)" != ""; then export "$(EXTRAENV)"; fi && if test "$(EXTRAPKGCONFIGPATH)" != ""; then export PKG_CONFIG_PATH="$(EXTRAPKGCONFIGPATH)"; fi && ./configure $(PFIX_STRING) $(OPTIONS)

configure_cmake:
	cd build/$(NAME_VERSION) && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS="$(EXTRALDFLAGS)"; fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS="$(EXTRACFLAGS)";export CPPFLAGS="$(EXTRACFLAGS)"; fi && if test "$(EXTRAENV)" != ""; then export "$(EXTRAENV)"; fi && if test "$(EXTRAPKGCONFIGPATH)" != ""; then export PKG_CONFIG_PATH="$(EXTRAPKGCONFIGPATH)"; fi &&  if test ! -d build; then mkdir build; fi && cd build && cmake -DCMAKE_INSTALL_PREFIX=$(PREFIX) -DCMAKE_PREFIX_PATH=$(PREFIX) -DCMAKE_INSTALL_LIBDIR=lib $(OPTIONS) ..

build:
	cd build/$(NAME_VERSION) && make $(MAKEOPT)

build_cmake:
	cd build/$(NAME_VERSION)/build && make .. $(MAKEOPT)

install:
	cd build/$(NAME_VERSION) && make $(MAKEOPT) install

install_cmake:
	cd build/$(NAME_VERSION)/build && make .. $(MAKEOPT) install

download:
	$(MFEXT_HOME)/bin/_download_helper.sh `readlink -m $(ARCHIVE_TARGET)` `readlink -m ./sources` $(CHECKTYPE) $(CHECKSUM)

uncompress:
	rm -Rf $(NAME_VERSION)
	$(MFEXT_HOME)/bin/_uncompress_helper.sh `readlink -m $(ARCHIVE_TARGET)` $(EXTENSION)

python2build:
	cd build/$(NAME_VERSION) && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi  && $(MFEXT_HOME)/bin/python2 setup.py build

python2build_cmake:
	cd build/$(NAME_VERSION)/build && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi  && $(MFEXT_HOME)/bin/python2 setup.py build

python3build:
	cd build/$(NAME_VERSION) && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi  && $(MFEXT_HOME)/bin/python3 setup.py build $(EXTRA_SETUP_PY_FLAGS)

python3build_cmake:
	cd build/$(NAME_VERSION)/build && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi  && $(MFEXT_HOME)/bin/python3 setup.py build $(EXTRA_SETUP_PY_FLAGS)

python2install:
	if ! test -d $(PYTHON2_SITE_PACKAGES); then mkdir -p $(PYTHON2_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION) && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python2 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON2_SITE_PACKAGES)

python2install_cmake:
	if ! test -d $(PYTHON2_SITE_PACKAGES); then mkdir -p $(PYTHON2_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/build && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python2 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON2_SITE_PACKAGES)

python2pyinstall:
	if ! test -d $(PYTHON2_SITE_PACKAGES); then mkdir -p $(PYTHON2_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python2 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON2_SITE_PACKAGES)

python2pyinstall_cmake:
	if ! test -d $(PYTHON2_SITE_PACKAGES); then mkdir -p $(PYTHON2_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/build/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python2 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON2_SITE_PACKAGES)

python2swiginstall:
	if ! test -d $(PYTHON2_SITE_PACKAGES); then mkdir -p $(PYTHON2_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION) && if [ -a swig/python/setup.py ] ; then cd swig/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python2 setup.py install --prefix=$(PREFIX)/opt/python2 --install-lib=$(PYTHON2_SITE_PACKAGES); fi

python2swiginstall_cmake:
	if ! test -d $(PYTHON2_SITE_PACKAGES); then mkdir -p $(PYTHON2_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/build && if [ -a swig/python/setup.py ] ; then cd swig/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python2 setup.py install --prefix=$(PREFIX)/opt/python2 --install-lib=$(PYTHON2_SITE_PACKAGES); fi

python3install:
	if ! test -d $(PYTHON3_SITE_PACKAGES); then mkdir -p $(PYTHON3_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION) && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python3 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON3_SITE_PACKAGES)

python3install_cmake:
	if ! test -d $(PYTHON3_SITE_PACKAGES); then mkdir -p $(PYTHON3_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/build && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python3 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON3_SITE_PACKAGES)

python3pyinstall:
	if ! test -d $(PYTHON3_SITE_PACKAGES); then mkdir -p $(PYTHON3_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python3 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON3_SITE_PACKAGES)

python3pyinstall_cmake:
	if ! test -d $(PYTHON3_SITE_PACKAGES); then mkdir -p $(PYTHON3_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/build/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python3 setup.py install --prefix=$(PREFIX) --install-lib=$(PYTHON3_SITE_PACKAGES)

python3swiginstall:
	if ! test -d $(PYTHON3_SITE_PACKAGES); then mkdir -p $(PYTHON3_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION) && if [ -a swig/python/setup.py ] ; then cd swig/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python3 setup.py install --prefix=$(PREFIX)/opt/python3 --install-lib=$(PYTHON3_SITE_PACKAGES); fi

python3swiginstall_cmake:
	if ! test -d $(PYTHON3_SITE_PACKAGES); then mkdir -p $(PYTHON3_SITE_PACKAGES); fi
	cd build/$(NAME_VERSION)/build && if [ -a swig/python/setup.py ] ; then cd swig/python && if test "$(EXTRALDFLAGS)" != ""; then export LDFLAGS=$(EXTRALDFLAGS); fi && if test "$(EXTRACFLAGS)" != ""; then export CFLAGS=$(EXTRACFLAGS); fi && $(MFEXT_HOME)/bin/python3 setup.py install --prefix=$(PREFIX)/opt/python3 --install-lib=$(PYTHON3_SITE_PACKAGES); fi
