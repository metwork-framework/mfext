#!/bin/bash

# See https://github.com/metwork-framework/mfext/issues/544
unset METWORK_LIST_PROCESSES_FORCE

{% if MFMODULE != "MFADMIN" %}
ADMIN_HOSTNAME=$(env |grep "^{{MFMODULE}}_ADMIN_HOSTNAME=" |awk -F '=' '{print $2;}')
ADMIN_SEND_MFLOG_LOGS=$(env |grep "^{{MFMODULE}}_ADMIN_SEND_MFLOG_LOGS=" |awk -F '=' '{print $2;}')
{% endif %}

. ${MFEXT_HOME}/lib/bash_utils.sh

if test "${1:-}" = "--help"; then
    echo "usage {{MFMODULE_LOWERCASE}}.start [NOINIT]"
    echo "  => start the {{MFMODULE_LOWERCASE}} module"
    exit 0
fi

exit_if_root

cd "${MFMODULE_RUNTIME_HOME}" || exit 1

NOINIT=0
if test "${1:-}" = "NOINIT"; then
    NOINIT=1
fi

{% if MFMODULE != "MFEXT" %}
CONFIG_TARGET=$(readlink -f "${MFMODULE_RUNTIME_HOME}/config/config.ini" 2>/dev/null)
if test "${CONFIG_TARGET}" != ""; then
    CONFIG_TIMESTAMP=$(date -r "${CONFIG_TARGET}" +%s 2>/dev/null)
    if test "${CONFIG_TIMESTAMP}" != ""; then
        if test "{% raw %}${{% endraw %}{{MFMODULE}}_CONF_GENERATION_TIME{% raw %}}{% endraw %}" -lt "${CONFIG_TIMESTAMP}"; then
            echo_bold "ERROR: your environment is outdated => please reload your terminal before playing with {{MFMODULE_LOWERCASE}}.start/stop"
            exit 1
        fi
    fi
fi
{% endif %}

STARTUP_FLAG=`env |grep "^${MFMODULE}_STARTUP_FLAG=" |awk -F '=' '{print $2;}'`
if test "${STARTUP_FLAG}" = "0"; then
    echo_bold "${MFMODULE}_STARTUP_FLAG=0 => nothing to start"
    exit 0
fi

RES=0

{% if MFMODULE == "MFDATA" or MFMODULE == "MFSERV" or MFMODULE == "MFBASE" %}
PLUGIN_NAME=$(env |grep ^{{MFMODULE}}_CURRENT_PLUGIN_NAME |awk -F '=' '{print $2;}')
if test "${PLUGIN_NAME}" != ""; then
    echo "ERROR: you can't use {{MFMODULE_LOWERCASE}}.start inside a plugin_env"
    exit 1
fi
if test "${NOINIT}" = "0"; then
    if ! test -d ${MFMODULE_RUNTIME_HOME}/var/plugins/base; then
        {{MFMODULE_LOWERCASE}}.init
    fi
    if ! test -d ${MFMODULE_RUNTIME_HOME}/var/plugins/base; then
        echo "ERROR: plugin system not initialized"
        exit 1
    fi
    {% if MFMODULE != "MFBASE" %}
    _install_or_update_configured_plugins.py
    {% endif %}
fi
{% endif %}

{% if MFMODULE == "MFADMIN" %}
if test "${NOINIT}" = "0"; then
    NEED_INIT=0
    if test "${MFADMIN_LAYER_METRICS_LOADED:-}" = "1"; then
        if ! test -f "${MFMODULE_RUNTIME_HOME}/var/grafana/grafana.db"; then
            NEED_INIT=1
        fi
    fi
    if test "${MFADMIN_LAYER_LOGS_LOADED:-}" = "1"; then
        if ! test -f "${MFMODULE_RUNTIME_HOME}/var/kibana/uuid"; then
            NEED_INIT=1
        fi
    fi
    if test "${NEED_INIT}" = "1"; then
        {{MFMODULE_LOWERCASE}}.init
    fi
fi
{% endif %}

LINE="*****     STARTING ${MFMODULE}     *****"
N=`echo "${LINE}" |wc -c`
HEADER=`echo "**************************************************************" |cut -c 2-${N}`
echo_bold "${HEADER}"
echo_bold "${LINE}"
echo_bold "${HEADER}"
echo "  "

echo STARTING >${MFMODULE_RUNTIME_HOME}/var/status

if test -f ${MFMODULE_HOME}/config/logrotate.conf; then
    echo -n "- Generating logrotate.conf..."
    echo_running
    cat ${MFMODULE_HOME}/config/logrotate.conf |envtpl --reduce-multi-blank-lines >${MFMODULE_RUNTIME_HOME}/tmp/config_auto/logrotate.conf
    if test -f ${MFMODULE_RUNTIME_HOME}/tmp/config_auto/logrotate.conf; then
        echo_ok
    else
        echo_nok
    fi
fi
{% block custom_before_circus %}
# Can be replaced by mfxxx.start.custom
{% endblock %}

if test "${RES}" = "0"; then

    if test -f ${MFMODULE_HOME}/config/circus.ini; then
        _circus.start
    fi

    {% if MFMODULE != "MFADMIN" %}
    if test "${MFEXT_LAYER_MONITORING_LOADED:-}" != "1"; then
        if test "${ADMIN_HOSTNAME}" != "null"; then
            echo -n "- Checking monitoring layer..."
            echo_warning
            echo_bold "WARNING: the [admin]/hostname value is configured for this module"
            echo_bold "         but the monitoring@mfext layer is not installed"
            echo_bold "         => you should consider installing it"
            echo
            echo "(hint: use 'yum install metwork-mfext-layer-monitoring'"
            echo "       as root to do that (or something similar adapted to your Linux"
            echo "       distribution)"
            echo
            export ADMIN_HOSTNAME=null
        fi
    fi
    {% endif %}

    {% block custom %}
    # Can be replaced by mfxxx.start.custom
    {% endblock %}

    _make_and_install_crontab.sh

    {% if MFMODULE != "MFADMIN" %}
    if test "${ADMIN_HOSTNAME}" != ""; then
        if test "${ADMIN_HOSTNAME}" != "null"; then
    {% endif %}
    _circus_wait_watcher_started.sh telegraf || RES=1
    _circus_wait_watcher_started.sh telegraf_collector_metwork_module || RES=1
    {% if MFMODULE != "MFADMIN" %}
        fi
    fi
    {% endif %}

    {% if MFMODULE != "MFADMIN" %}
    if test "${ADMIN_SEND_MFLOG_LOGS}" = "1"; then
        if test "${ADMIN_HOSTNAME}" != "null"; then
            _circus_wait_watcher_started.sh mflog2mfadmin || RES=1
        fi
    fi
    {% endif %}

    echo -n "- Wait 2 sec..."
    echo_running
    sleep 2
    echo_ok

    MFMODULE_LOWERCASE=`echo ${MFMODULE} | tr '[:upper:]' '[:lower:]'`
    ${MFMODULE_LOWERCASE}.status QUIET

else
    echo
    echo_bold "ERROR(S) DETECTED DURING ${MFMODULE} CHECK"
fi

RES=$?
if test ${RES} -eq 0; then
    echo RUNNING >${MFMODULE_RUNTIME_HOME}/var/status
else
    echo ERROR >${MFMODULE_RUNTIME_HOME}/var/status
fi

{% if MFMODULE == "MFBASE" %}
if test ${RES} -eq 0; then
    _install_or_update_configured_plugins.py
fi
{% endif %}

echo " "
echo " "
exit ${RES}
