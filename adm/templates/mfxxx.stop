#!/bin/bash

. ${MFEXT_HOME}/lib/bash_utils.sh

if test "${1:-}" = "--help"; then
    echo "usage {{MFMODULE_LOWERCASE}}.stop [KEEPCRON]"
    echo "  => stop the {{MFMODULE_LOWERCASE}} module"
    echo "     (if KEEPCRON is set as argument, we keep the cron)"
    exit 0
fi

exit_if_root
KEEPCRON=0
if test "${1:-}" = "KEEPCRON"; then
    KEEPCRON=1
fi

cd "${MFMODULE_RUNTIME_HOME}" || exit 1

{% if MFMODULE != "MFEXT" %}
CONFIG_TARGET=$(readlink -f "${MFMODULE_RUNTIME_HOME}/config/config.ini" 2>/dev/null)
if test "${CONFIG_TARGET}" != ""; then
    CONFIG_TIMESTAMP=$(date -r "${CONFIG_TARGET}" +%s 2>/dev/null)
    if test "${CONFIG_TIMESTAMP}" != ""; then
        if test "{% raw %}${{% endraw %}{{MFMODULE}}_CONF_GENERATION_TIME{% raw %}}{% endraw %}" -lt "${CONFIG_TIMESTAMP}"; then
            echo_bold "ERROR: your environment is outdated => please reload your terminal before playing with {{MFMODULE_LOWERCASE}}.start/stop"
            exit 1
        fi
    fi
fi
{% endif %}

STARTUP_FLAG=`env |grep "^${MFMODULE}_STARTUP_FLAG=" |awk -F '=' '{print $2;}'`
if test "${STARTUP_FLAG}" = "0"; then
    echo_bold "${MFMODULE}_STARTUP_FLAG=0 => nothing to start"
    exit 0
fi

PLUGIN_NAME=$(env |grep ^{{MFMODULE}}_CURRENT_PLUGIN_NAME |awk -F '=' '{print $2;}')
if test "${PLUGIN_NAME}" != ""; then
    echo "ERROR: you can't use {{MFMODULE_LOWERCASE}}.stop inside a plugin_env"
    exit 1
fi

LINE="*****     STOPPING ${MFMODULE}     *****"
N=`echo "${LINE}" |wc -c`
HEADER=`echo "**************************************************************" |cut -c 2-${N}`
echo_bold "${HEADER}"
echo_bold "${LINE}"
echo_bold "${HEADER}"
echo "  "

{% if MFMODULE != "MFADMIN" %}
    if test "{% raw %}${{% endraw %}{{MFMODULE}}_ADMIN_HOSTNAME{% raw %}}{% endraw %}" != "null"; then
        ( timeout 10s _send_state.py stopping & ) >/dev/null 2>&1
    fi
{% else %}
    ( timeout 10s _send_state.py stopping & ) >/dev/null 2>&1
{% endif %}
echo STOPPING >${MFMODULE_RUNTIME_HOME}/var/status

if test "${KEEPCRON}" = "0"; then
    _uninstall_crontab.sh
fi

{% block custom %}
# Can be replaced by mfxxx.stop.custom
{% endblock %}

{% if MFMODULE in ["MFSERV", "MFDATA", "MFBASE"] %}
plugins.stop
{% endif %}

{% if MFMODULE in ["MFSERV", "MFDATA", "MFBASE"] %}
{% block custom_after_plugins %}
# Can be replaced by mfxxx.stop.custom
{% endblock %}
{% endif %}

if test -f ${MFMODULE_HOME}/config/circus.ini; then
    _circus.stop
fi
kill_remaining_processes.py
rm -f ${MFMODULE_RUNTIME_HOME}/var/*.socket >/dev/null 2>&1

echo STOPPED >${MFMODULE_RUNTIME_HOME}/var/status
{% if MFMODULE != "MFADMIN" %}
    if test "{% raw %}${{% endraw %}{{MFMODULE}}_ADMIN_HOSTNAME{% raw %}}{% endraw %}" != "null"; then
        ( timeout 10s _send_state.py stopped & ) >/dev/null 2>&1
    fi
{% endif %}

echo " "
echo " "
