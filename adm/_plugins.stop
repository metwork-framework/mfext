#!/usr/bin/env python3

import sys
from mfplugin.compat import get_installed_plugins
from mfext.circus import MetWorkCircusClient
from mfutil.cli import echo_ok, echo_running, echo_warning

# Preparing
echo_running("- Collecting infos about plugins...")
client = MetWorkCircusClient()
if not client.check():
    echo_warning("(circus stopped)")
    sys.exit(0)
watchers = client.list_watchers()
watchers_by_plugin = {}
if len(sys.argv) >= 2:
    plugins = [{"name": sys.argv[1]}]
else:
    plugins = get_installed_plugins()
for plugin in plugins:
    watchers = client.list_watchers_by_plugin_pattern(plugin['name'])
    if watchers is not None and len(watchers) > 0:
        watchers_by_plugin[plugin['name']] = watchers
echo_ok()

# Scheduling
for plugin_dict in plugins:
    plugin_name = plugin_dict["name"]
    if plugin_name in watchers_by_plugin:
        print("- Scheduling stop of plugin: %s" % plugin_name)
        for watcher in watchers_by_plugin[plugin_name]:
            client.stop_watcher(name=watcher, indent=4, check=False)

# Waiting
res = True
for plugin_dict in plugins:
    plugin_res = True
    plugin_name = plugin_dict['name']
    if plugin_name in watchers_by_plugin:
        print("- Waiting for stop of plugin: %s" % plugin_name)
        watchers = watchers_by_plugin[plugin_name]
        for watcher in watchers:
            res = res and client.stop_watcher_and_wait(indent=4, name=watcher,
                                                       scheduled=True)

if not res:
    sys.exit(1)
