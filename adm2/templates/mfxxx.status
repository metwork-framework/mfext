#!/bin/bash

. ${MFEXT_HOME}/lib/bash_utils.sh
exit_if_root

if test "${1:-}" = "--help"; then
    echo "usage {{MODULE_LOWERCASE}}.start"
    echo "  => test the {{MODULE_LOWERCASE}} module"
    exit 0
fi

PLUGIN_NAME=$(env |grep ^{{MODULE}}_CURRENT_PLUGIN_NAME |awk -F '=' '{print $2;}')
if test "${PLUGIN_NAME}" != ""; then
    echo "ERROR: you can't use {{MODULE_LOWERCASE}}.status inside a plugin_env"
    exit 1
fi
if test "$1" != "QUIET"; then
    LINE="*****     CHECKING ${MODULE}     *****"
    N=`echo "${LINE}" |wc -c`
    HEADER=`echo "**************************************************************" |cut -c 2-${N}`
    echo_bold "${HEADER}"
    echo_bold "${LINE}"
    echo_bold "${HEADER}"
    echo "  "
fi

RES=0
if test -f ${MODULE_HOME}/config/circus.ini; then
    _circus.status || RES=1
fi
if test "${MODULE}" = "MFADMIN"; then
    ADMIN_HOSTNAME=localhost
else
    ADMIN_HOSTNAME=$(env |grep "^${MODULE}_ADMIN_HOSTNAME=" |awk -F "=" '{print $2;}')
fi
if test "${ADMIN_HOSTNAME}" != "null"; then
    if test "${ADMIN_HOSTNAME}" != ""; then
        circus_status_watcher.sh telegraf || RES=1
    fi
fi

# Checking module crontab is not empty
echo -n "- Checking crontab is not empty..."
echo_running

if hash crontab 2>/dev/null; then
    N=`crontab -l | wc -l`
    if test ${N} -gt 0; then
        echo_ok
    else
        echo_nok "(crontab is empty)"
        RES=1
    fi
else
    echo_warning "(no crontab installed)"
fi

{% block custom %}
# Can be replaced by mfxxx.status.custom
{% endblock %}

if test ${RES} -ne 0; then
    echo ""
    echo_bold "ERROR(S) DETECTED DURING ${MODULE} CHECK"
else
    if test "$1" != "QUIET"; then
        echo " "
        echo_bold "OK !"
    fi
fi

exit ${RES}
